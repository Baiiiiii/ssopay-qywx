<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	<!-- 转换器注册-->
	<mvc:annotation-driven />
	<!-- 自动扫描且只扫描@Controller -->
	<context:component-scan base-package="com.ssopay.qywx" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
	    <property name="messageConverters">
	        <list>
	            <!--json转换器-->
	            <ref bean="mappingJacksonHttpMessageConverter" />
	        </list>
	    </property>
	</bean>
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">  
	    <property name="messageConverters">  
	        <list>  
	               <ref bean="mappingJacksonHttpMessageConverter" />  
	        </list>  
	    </property>  
	</bean>  
	
	<bean id="mappingJacksonHttpMessageConverter"  
	    class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">  
	     <property name = "supportedMediaTypes">  
	          <list>  
	            <bean class="org.springframework.http.MediaType">  
	             <constructor-arg index="0" value="text"/>  
	             <constructor-arg index="1" value="plain"/>  
	             <constructor-arg index="2" value="UTF-8"/>  
	            </bean>  
	            <bean class="org.springframework.http.MediaType">  
	             <constructor-arg index="0" value="*"/>  
	             <constructor-arg index="1" value="*"/>  
	             <constructor-arg index="2" value="UTF-8"/>  
	            </bean>  
	            <bean class="org.springframework.http.MediaType">  
	             <constructor-arg index="0" value="text"/>  
	             <constructor-arg index="1" value="*"/>  
	             <constructor-arg index="2" value="UTF-8"/>  
	            </bean>  
	             <bean class="org.springframework.http.MediaType">  
	             <constructor-arg index="0" value="application"/>  
	             <constructor-arg index="1" value="json"/>  
	             <constructor-arg index="2" value="UTF-8"/>  
	            </bean>  
	          </list>  
	    </property>  
	</bean>
	 <!-- 拦截器 -->
	<mvc:interceptors>  
   		 <mvc:interceptor>
   		 	<mvc:mapping path="/**" />
   		 	<bean class="com.ssopay.qywx.interceptor.ControllerInterceptor"></bean>
   		 </mvc:interceptor>
   </mvc:interceptors>  
   
	<mvc:view-controller path="/" view-name="redirect:/index"/>
	<!-- 当在web.xml 中   DispatcherServlet使用 <url-pattern>/</url-pattern> 映射时，能映射静态资源 -->
	<mvc:default-servlet-handler/>
	<!-- 静态资源映射 -->
	<mvc:resources mapping="/assets/**" location="/assets/" />
	 
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/"/>
		<property name="suffix" value=".jsp"/>
	</bean>
	<!-- 文件上传相关 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="5000000"></property>
	</bean>
	<!-- 控制器异常处理 -->
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">  
        <property name="exceptionMappings">  
            <props>  
                <prop key="org.apache.shiro.authz.UnauthorizedException">error/403</prop>  
            </props>  
        </property>  
    </bean>
	<!-- shiro支持 -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor"/>
	
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
    	<property name="securityManager" ref="securityManager"/>
	</bean>
</beans>
